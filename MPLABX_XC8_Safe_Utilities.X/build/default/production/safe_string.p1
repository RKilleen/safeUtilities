Version 3.2 HI-TECH Software Intermediate Code
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef __int24 int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 52: typedef unsigned char uint8_t;
[; ;stdint.h: 58: typedef unsigned int uint16_t;
[; ;stdint.h: 65: typedef __uint24 uint24_t;
[; ;stdint.h: 72: typedef unsigned long int uint32_t;
[; ;stdint.h: 88: typedef signed char int_least8_t;
[; ;stdint.h: 96: typedef signed int int_least16_t;
[; ;stdint.h: 109: typedef __int24 int_least24_t;
[; ;stdint.h: 118: typedef signed long int int_least32_t;
[; ;stdint.h: 136: typedef unsigned char uint_least8_t;
[; ;stdint.h: 143: typedef unsigned int uint_least16_t;
[; ;stdint.h: 154: typedef __uint24 uint_least24_t;
[; ;stdint.h: 162: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 181: typedef signed char int_fast8_t;
[; ;stdint.h: 188: typedef signed int int_fast16_t;
[; ;stdint.h: 200: typedef __int24 int_fast24_t;
[; ;stdint.h: 208: typedef signed long int int_fast32_t;
[; ;stdint.h: 224: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 230: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 240: typedef __uint24 uint_fast24_t;
[; ;stdint.h: 247: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 268: typedef int32_t intmax_t;
[; ;stdint.h: 282: typedef uint32_t uintmax_t;
[; ;stdint.h: 289: typedef int16_t intptr_t;
[; ;stdint.h: 294: typedef uint16_t uintptr_t;
[; ;stdbool.h: 15: typedef unsigned char bool;
[; ;safe_types.h: 7: typedef char char_t;
[; ;safe_string.h: 10: extern int16_t safe_string_length ( const char_t aString[] );
[; ;safe_string.h: 11: extern bool safe_string_compare ( const char_t aString1[], const char_t aString2[], const int16_t max_chars );
"6 safe_string.c
[v _safe_string_length `(i ~T0 @X0 1 ef1`*Cuc ]
{
[; ;safe_string.c: 6: int16_t safe_string_length ( const char_t aString[] ) {
[e :U _safe_string_length ]
[v _aString `*Cuc ~T0 @X0 1 r1 ]
[f ]
"7
[v _n `i ~T0 @X0 1 a ]
[; ;safe_string.c: 7: int16_t n=0;
[e = _n -> 0 `i ]
[; ;safe_string.c: 8: if ( aString != (char_t*)0 ) {
"8
[e $ ! != _aString -> -> -> 0 `i `*uc `*Cuc 2  ]
{
[; ;safe_string.c: 9: while (aString[n] != '\0') {
"9
[e $U 3  ]
[e :U 4 ]
{
[; ;safe_string.c: 10: n++;
"10
[e ++ _n -> 1 `i ]
"11
}
[e :U 3 ]
"9
[e $ != -> *U + _aString * -> _n `x -> -> # *U _aString `i `x `ui -> 0 `ui 4  ]
[e :U 5 ]
"12
}
[e :U 2 ]
[; ;safe_string.c: 11: }
[; ;safe_string.c: 12: }
[; ;safe_string.c: 13: return n;
"13
[e ) _n ]
[e $UE 1  ]
[; ;safe_string.c: 14: }
"14
[e :UE 1 ]
}
"21
[v _safe_string_compare `(uc ~T0 @X0 1 ef3`*Cuc`*Cuc`Ci ]
{
[; ;safe_string.c: 21: bool safe_string_compare ( const char_t aString1[], const char_t aString2[], const int16_t max_chars ) {
[e :U _safe_string_compare ]
[v _aString1 `*Cuc ~T0 @X0 1 r1 ]
[v _aString2 `*Cuc ~T0 @X0 1 r2 ]
[v _max_chars `Ci ~T0 @X0 1 r3 ]
[f ]
"22
[v _ret `uc ~T0 @X0 1 a ]
[; ;safe_string.c: 22: bool ret=1;
[e = _ret -> -> 1 `i `uc ]
[; ;safe_string.c: 24: if ( (aString1 == (char_t*)0) || (aString2 == (char_t*)0) ) {
"24
[e $ ! || == _aString1 -> -> -> 0 `i `*uc `*Cuc == _aString2 -> -> -> 0 `i `*uc `*Cuc 7  ]
{
[; ;safe_string.c: 25: ret=0;
"25
[e = _ret -> -> 0 `i `uc ]
"26
}
[; ;safe_string.c: 26: } else {
[e $U 8  ]
[e :U 7 ]
{
"27
[v _loop `uc ~T0 @X0 1 a ]
[; ;safe_string.c: 27: bool loop=1;
[e = _loop -> -> 1 `i `uc ]
"28
[v _i `i ~T0 @X0 1 a ]
[; ;safe_string.c: 28: int16_t i=0;
[e = _i -> 0 `i ]
[; ;safe_string.c: 30: while ( loop ) {
"30
[e $U 9  ]
[e :U 10 ]
{
[; ;safe_string.c: 31: if ( i >= max_chars ) {
"31
[e $ ! >= _i _max_chars 12  ]
{
[; ;safe_string.c: 32: loop=0;
"32
[e = _loop -> -> 0 `i `uc ]
"33
}
[; ;safe_string.c: 33: } else {
[e $U 13  ]
[e :U 12 ]
{
[; ;safe_string.c: 34: if (aString1[i] != aString2[i] ) {
"34
[e $ ! != -> *U + _aString1 * -> _i `x -> -> # *U _aString1 `i `x `i -> *U + _aString2 * -> _i `x -> -> # *U _aString2 `i `x `i 14  ]
{
[; ;safe_string.c: 35: loop=0;
"35
[e = _loop -> -> 0 `i `uc ]
[; ;safe_string.c: 36: ret=0;
"36
[e = _ret -> -> 0 `i `uc ]
"37
}
[; ;safe_string.c: 37: } else {
[e $U 15  ]
[e :U 14 ]
{
[; ;safe_string.c: 38: if ( aString1[i] == '\0' ) {
"38
[e $ ! == -> *U + _aString1 * -> _i `x -> -> # *U _aString1 `i `x `ui -> 0 `ui 16  ]
{
[; ;safe_string.c: 39: loop=0;
"39
[e = _loop -> -> 0 `i `uc ]
"40
}
[e :U 16 ]
"41
}
[e :U 15 ]
"42
}
[e :U 13 ]
[; ;safe_string.c: 40: }
[; ;safe_string.c: 41: }
[; ;safe_string.c: 42: }
[; ;safe_string.c: 43: i++;
"43
[e ++ _i -> 1 `i ]
"44
}
[e :U 9 ]
"30
[e $ != -> _loop `i -> -> -> 0 `i `uc `i 10  ]
[e :U 11 ]
"45
}
[e :U 8 ]
[; ;safe_string.c: 44: }
[; ;safe_string.c: 45: }
[; ;safe_string.c: 46: return ret;
"46
[e ) _ret ]
[e $UE 6  ]
[; ;safe_string.c: 47: }
"47
[e :UE 6 ]
}
