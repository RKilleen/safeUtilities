Version 3.2 HI-TECH Software Intermediate Code
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef __int24 int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 52: typedef unsigned char uint8_t;
[; ;stdint.h: 58: typedef unsigned int uint16_t;
[; ;stdint.h: 65: typedef __uint24 uint24_t;
[; ;stdint.h: 72: typedef unsigned long int uint32_t;
[; ;stdint.h: 88: typedef signed char int_least8_t;
[; ;stdint.h: 96: typedef signed int int_least16_t;
[; ;stdint.h: 109: typedef __int24 int_least24_t;
[; ;stdint.h: 118: typedef signed long int int_least32_t;
[; ;stdint.h: 136: typedef unsigned char uint_least8_t;
[; ;stdint.h: 143: typedef unsigned int uint_least16_t;
[; ;stdint.h: 154: typedef __uint24 uint_least24_t;
[; ;stdint.h: 162: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 181: typedef signed char int_fast8_t;
[; ;stdint.h: 188: typedef signed int int_fast16_t;
[; ;stdint.h: 200: typedef __int24 int_fast24_t;
[; ;stdint.h: 208: typedef signed long int int_fast32_t;
[; ;stdint.h: 224: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 230: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 240: typedef __uint24 uint_fast24_t;
[; ;stdint.h: 247: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 268: typedef int32_t intmax_t;
[; ;stdint.h: 282: typedef uint32_t uintmax_t;
[; ;stdint.h: 289: typedef int16_t intptr_t;
[; ;stdint.h: 294: typedef uint16_t uintptr_t;
[; ;stdbool.h: 15: typedef unsigned char bool;
[; ;safe_types.h: 7: typedef char char_t;
[; ;safe_compress.h: 10: extern bool safe_compress(uint8_t anArray1[], const char_t aString1[]);
[; ;safe_compress.h: 11: extern bool safe_uncompress(char_t aString[], const uint8_t anArray[], const int16_t arraySize);
"6 safe_compress.c
[v _safe_compress `(uc ~T0 @X0 1 ef2`*uc`*Cuc ]
{
[; ;safe_compress.c: 6: bool safe_compress(uint8_t anArray1[], const char_t aString1[]) {
[e :U _safe_compress ]
[v _anArray1 `*uc ~T0 @X0 1 r1 ]
[v _aString1 `*Cuc ~T0 @X0 1 r2 ]
[f ]
"7
[v _compress_status `uc ~T0 @X0 1 a ]
[; ;safe_compress.c: 7: bool compress_status;
[; ;safe_compress.c: 9: if ( (anArray1 == (uint8_t*)0) || (aString1 == (char_t*)0) ) {
"9
[e $ ! || == _anArray1 -> -> 0 `i `*uc == _aString1 -> -> -> 0 `i `*uc `*Cuc 2  ]
{
[; ;safe_compress.c: 10: compress_status=0;
"10
[e = _compress_status -> -> 0 `i `uc ]
"11
}
[; ;safe_compress.c: 11: } else {
[e $U 3  ]
[e :U 2 ]
{
[; ;safe_compress.c: 12: compress_status = 1;
"12
[e = _compress_status -> -> 1 `i `uc ]
"14
}
[e :U 3 ]
[; ;safe_compress.c: 14: }
[; ;safe_compress.c: 15: return compress_status;
"15
[e ) _compress_status ]
[e $UE 1  ]
[; ;safe_compress.c: 16: }
"16
[e :UE 1 ]
}
"21
[v _safe_uncompress `(uc ~T0 @X0 1 ef3`*uc`*Cuc`Ci ]
{
[; ;safe_compress.c: 21: bool safe_uncompress(char_t aString[], const uint8_t anArray[], const int16_t arraySize) {
[e :U _safe_uncompress ]
[v _aString `*uc ~T0 @X0 1 r1 ]
[v _anArray `*Cuc ~T0 @X0 1 r2 ]
[v _arraySize `Ci ~T0 @X0 1 r3 ]
[f ]
"22
[v _uncompress_status `uc ~T0 @X0 1 a ]
[; ;safe_compress.c: 22: bool uncompress_status;
[; ;safe_compress.c: 24: if ( (anArray == (uint8_t*)0) || (aString == (char_t*)0) ) {
"24
[e $ ! || == _anArray -> -> -> 0 `i `*uc `*Cuc == _aString -> -> 0 `i `*uc 5  ]
{
[; ;safe_compress.c: 25: uncompress_status=0;
"25
[e = _uncompress_status -> -> 0 `i `uc ]
"26
}
[; ;safe_compress.c: 26: } else {
[e $U 6  ]
[e :U 5 ]
{
[; ;safe_compress.c: 27: uncompress_status=1;
"27
[e = _uncompress_status -> -> 1 `i `uc ]
"29
}
[e :U 6 ]
[; ;safe_compress.c: 29: }
[; ;safe_compress.c: 30: return uncompress_status;
"30
[e ) _uncompress_status ]
[e $UE 4  ]
[; ;safe_compress.c: 31: }
"31
[e :UE 4 ]
}
